language: python
sudo: false

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/.cache/matplotlib
env:
  global:
    - secure: "ePWjP2xNjB2Wa+XlJKiNe+D8VEcY4woC72ySFWYXh6nfW2+OZwOb9TLYojNU67gacc/JKizMSBOKnH5EWeVZRwzR3x5kFFJ5ccv3EPGO1qw15rYExWAWPY45IXBZbmz4u58R4t3viTddZnUtVmMfgS9PzYSe1uNtVYqYfLnfRGX+6uG28xkNRb2TH62coXT0GThvLi/4uP19K5Wvo4Sxoep+WJ7F1AaP6NIoM8Cquxmm2qCE580UOEBEM7myxNzA6tW9aNQwsnJdZt53XyWdXotkOqxLV9/G/hshslsE8xJYHm+HUq2AuhGIVdtq5VUZTnqGPnSaayW8fO+wVsXAqXAO4eV08pMW61VFmmPQ9hGvKteuehVUaeRxVgGEYidyR4SpnVBZFIAylHqpzVIq5VJr2hAzXyJt4SlEZLrDLL7PLJ7b+gDDXM9BECKOdiFN9rl9W1s7+d6Hqlb/F2OPIiv7EpEgK97B6EqHauPK8neEp3VpE9JaLr7AWwbygNlCpJxfOFHq64OGtwmElk0FbxVkM/XSXMjfW8592js6rkybEAjhYvPA1Uunlpb59HyN26Tsd5asV1GTrjAaraKBCyV3mAfqI23tHQP9BFqDGbsfwSfMFQf3nNPprfROLi16mKXxdxibJmOP/tXuoQRe9zMqX0tH8QQO5SLi0e4amBQ="
  matrix:
    - PRECEDENCE='default'
    - PRECEDENCE='default bleeding'

services:
  - mongodb

addons:
  apt:
    sources:
    - mongodb-3.2-precise
    packages:
    - mongodb-org-server

python:
  - 3.6

before_install:
  - git clone https://github.com/NSLS-II/nsls2-ci --branch master --single-branch ~/ci_scripts
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16"
  - "export DISPLAY=:99.0"
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -b -p ~/mc
  - export PATH=~/mc/bin:$PATH
  - conda config --set always_yes yes --set changeps1 no --set quiet true
  - conda update conda --yes
  - conda config --add channels conda-forge

install:
  - export GIT_FULL_HASH=`git rev-parse HEAD`
  - conda create -n testenv python=$TRAVIS_PYTHON_VERSION orch
  - source activate testenv
  - orch score.yaml
  - git clean -xfd

script:
  - set -e
  # make sure the sqlite file exists to avoid race conditions
  - python -c "from bluesky.utils import get_history; get_history()"
  # make sure package data is correctly set
  - python -c "from xpdsim import xpd_pe1c; xpd_pe1c.get()"
  - python -c "from xpdacq.tests.conftest import *"
  # copy config file over
  - coverage run run_tests.py
  - coverage report -m
  - codecov
#  - conda install --yes --file requirements/docs.txt
#  - python -m pip install -e . --no-deps --ignore-installed --no-cache-dir -vvv
  - cd docs
#  - which python
#  - python --version
#  - python -c "from xpdacq import __version__"
  - make html
  - cd ..
  - doctr deploy . --built-docs ./docs/_build/html;

after_script:
  - set +e
  - flake8 .
